% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check-complete-ids.R
\name{check_complete_ids}
\alias{check_complete_ids}
\title{Check data against existing IDs}
\usage{
check_complete_ids(
  data,
  samples_table,
  study,
  id_type = c("individualID", "specimenID"),
  assay = NULL,
  success_msg = "Data includes a complete set of IDs",
  fail_msg = "Some IDs are missing from the data"
)
}
\arguments{
\item{data}{Data frame of data to be checked}

\item{samples_table}{Data frame containing master table of all individual and
specimen IDs per study}

\item{study}{Name of the study}

\item{id_type}{\code{"individualID"} or \code{"specimenID"}}

\item{assay}{String naming the assay. If provided, will filter \code{master_table}
to the specific study and assay. This is useful when validating assay
metadata in studies wheere multiple assays with different specimens were
conducted. If \code{NULL} (the default), will look at all IDs for the study,
regardless of assay.}

\item{success_msg}{Message indicating the check succeeded.}

\item{fail_msg}{Message indicating the check failed.}
}
\value{
A condition object indicating whether the required columns were
present (\code{"check_pass"}) or absent (\code{"check_fail"})
}
\description{
If data is an addition to an existing study, check the specimen and
individual IDs against the master table of existing IDs. Contributors should
upload the complete metadata files, so all IDs in the master table should be
present in the uploaded data.
}
\examples{
samples_table <- tibble::tribble(
  ~individualID, ~specimenID, ~study, ~assay,
  "A", "a1", "study1", "rnaSeq",
  "A", "a2", "study1", "rnaSeq",
  "B", "b1", "study1", "rnaSeq",
  "B", "b2", "study1", "rnaSeq",
  "B", "b1", "study1", "rnaSeq",
  "B", "b1", "study1", "rnaSeq",
  "C", "c1", "study1", "LC-MS",
  "D", "d1", "study2", "rnaSeq",
  "D", "d2", "study2", "rnaSeq"
)
dat <- tibble::tribble(
  ~individualID, ~specimenID,
  "A", "a1",
  "A", "a2"
)
check_complete_ids(
  data = dat,
  samples_table = samples_table,
  id_type = "individualID",
  study = "study1"
)
}
